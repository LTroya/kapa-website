---
import type { PageComponent } from "@/pages.types.ts";
import { PAGEABLE_TYPES } from "@/pages.types.ts";

import Reviews from "@/components/landing/Reviews.astro";
import ClientTestimonials from "@/components/testimonials/ClientTestimonials.astro";
import Divider from "@/components/ui/Divider.astro";
import CallToAction from "@/components/landing/CallToAction.astro";

import Hero from "./Hero.astro";
import Feature from "./Feature.astro";
import TextComponent from "./TextComponent.astro";
import StaticRenderer from "./StaticRenderer.astro";

// import Hero from './Hero.astro';
// import StaticPage from './StaticPage.astro';

// import CallToAction from './CallToAction.astro';
// import Testimonial from './Testimonial.astro';
// import Carousel from './Carousel.astro';
// import FeatureBenefit from './FeatureBenefit.astro';
// import Feature from './Feature.astro';

interface Props {
	component: PageComponent;
}

const { component } = Astro.props as Props;

const isComponent = (type: string) => {
	return component && component.pageable_type === type;
};
---

{isComponent(PAGEABLE_TYPES.PAGE_HERO) && (
<div>
	<Hero component={component} />
</div>
	)}

{isComponent(PAGEABLE_TYPES.STATIC_PAGE) && (
<div>
	<StaticRenderer component={component} />
</div>
	)}

{isComponent(PAGEABLE_TYPES.PAGE_TEXT_COMPONENT) && (
<div>
	<TextComponent component={component} />
</div>
	)}

{  isComponent(PAGEABLE_TYPES.PAGE_CALL_TO_ACTION) && (
<div>
	<Divider class="small" />
	<CallToAction component={component} />
</div>
	)}

{isComponent(PAGEABLE_TYPES.PAGE_TESTIMONIAL) && (
<div>
	<Divider class="small" />
	<ClientTestimonials />
</div>
	)}

{isComponent(PAGEABLE_TYPES.PAGE_CAROUSEL) && (
<div>Carousel Goes Here</div>
	)}

{isComponent(PAGEABLE_TYPES.PAGE_FEATURE_BENEFIT) && (
<div>Feature Benefit Goes Here</div>
	)}

{isComponent(PAGEABLE_TYPES.PAGE_FEATURE) && (
<div>
	<Divider class="large" />
	<Feature component={component} />
</div>
	)}
